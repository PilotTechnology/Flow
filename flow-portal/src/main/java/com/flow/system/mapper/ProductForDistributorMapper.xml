<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.flow.system.mapper.ProductForDistributorMapper">
  <resultMap id="BaseResultMap" type="com.flow.system.model.ProductForDistributor">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="SERVICE_CODE" jdbcType="VARCHAR" property="serviceCode" />
    <result column="PRODUCT_CODE" jdbcType="VARCHAR" property="productCode" />
    <result column="DISCOUNT" jdbcType="DOUBLE" property="discount" />
    <result column="STATE" jdbcType="INTEGER" property="state" />
    <result column="PRODUCT_NAME" jdbcType="VARCHAR" property="prodcutName" />
    <result column="OPERATOR_NAME" jdbcType="VARCHAR" property="operatorName" />
    <result column="PROVIDER_NAME" jdbcType="VARCHAR" property="providerName" />
    <result column="PROVIDER_CODE" jdbcType="VARCHAR" property="providerCode" />
    <result column="PRO_PRODUCT_CODE" jdbcType="VARCHAR" property="proProductCode" />
    <result column="PROVINCE_NAME" jdbcType="VARCHAR" property="provinceName" />
    <result column="ENABLE_AREA" jdbcType="INTEGER" property="enableArea" />
    <result column="PRIORITY" jdbcType="INTEGER" property="priority" />
    <result column="SIZE" jdbcType="INTEGER" property="size" />
    <result column="PRICE" jdbcType="DOUBLE" property="price" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, SERVICE_CODE, PRODUCT_CODE, DISCOUNT, STATE
  </sql>
  <select id="listPage" resultMap="BaseResultMap">
  	select a.ID as ID, a.SERVICE_CODE as SERVICE_CODE, a.PRODUCT_CODE as PRODUCT_CODE, a.DISCOUNT as DISCOUNT, a.STATE as STATE,
		c.PRODCUT_NAME as PRODUCT_NAME, d.OPERATOR_NAME as OPERATOR_NAME, e.NAME as PROVIDER_NAME, c.PRO_PRODUCT_CODE as PRO_PRODUCT_CODE,
		f.PROVINCE_NAME as PROVINCE_NAME, c.ENABLE_AREA as ENABLE_AREA, c.PRIORITY as PRIORITY, c.SIZE as SIZE, c.PRICE as PRICE
	from t_flow_serv_prod a
	INNER JOIN t_flow_service b ON a.SERVICE_CODE = b.SERVICE_CODE
	INNER JOIN t_flow_product c ON c.PRODUCT_CODE = a.PRODUCT_CODE
	INNER JOIN t_base_operator d ON c.OPERATOR_CODE = d.OPERATOR_NAME
	INNER JOIN t_flow_provider e ON c.PROVIDER_CODE = e.PROVIDER_CODE
	INNER JOIN t_base_province f ON c.PROVINCE_CODE = f.PROVINCE_NAME
	WHERE a.SERVICE_CODE = #{quotationCode}
	limit #{start} , #{pageSize}
  </select>
  <select id="getCountWithQuotationCode" resultType="java.lang.Long">
  	SELECT COUNT(1) FROM t_flow_serv_prod 
  	where SERVICE_CODE = #{quotationCode}
  </select>
  <select id="getProductByOrder" resultMap="BaseResultMap">
  	select a.ID as ID, a.SERVICE_CODE as SERVICE_CODE, a.PRODUCT_CODE as PRODUCT_CODE, a.DISCOUNT as DISCOUNT, 
		c.PROVIDER_CODE as PROVIDER_CODE, 
		c.PRO_PRODUCT_CODE as PRO_PRODUCT_CODE, c.PRIORITY as PRIORITY, c.SIZE as SIZE, c.PRICE as PRICE
	from t_flow_serv_prod a
	inner join t_flow_service b
	inner join t_flow_product c
	where a.SERVICE_CODE = b.SERVICE_CODE and a.PRODUCT_CODE = c.PRODUCT_CODE
		and b.SERVICE_CODE = #{serviceCode} and a.state = 1 and c.STATE = 1 and c.OPERATOR_CODE = #{operatorCode} and c.SIZE = #{size}
		and c.ENABLE_AREA = #{enableArea} and (c.PROVINCE_CODE = #{provinceCode} or c.PROVINCE_CODE = "32") 
	ORDER BY c.PRIORITY DESC, c.PRICE * a.DISCOUNT ASC LIMIT 1
  </select>
  <select id="getVirtualProductByOrder" resultMap="BaseResultMap">
  	select a.ID as ID, a.SERVICE_CODE as SERVICE_CODE, a.PRODUCT_CODE as PRODUCT_CODE, a.DISCOUNT as DISCOUNT, 
		c.PROVIDER_CODE as PROVIDER_CODE, 
		c.PRO_PRODUCT_CODE as PRO_PRODUCT_CODE, c.PRIORITY as PRIORITY, c.SIZE as SIZE, c.PRICE as PRICE
	from t_flow_serv_prod a
	inner join t_flow_service b
	inner join t_flow_product c
	where a.SERVICE_CODE = b.SERVICE_CODE and a.PRODUCT_CODE = c.PRODUCT_CODE
		and b.SERVICE_CODE = #{serviceCode} and a.state = 1 and c.STATE = 1 and c.OPERATOR_CODE = #{operatorCode} and c.SIZE = #{size}
		and c.ENABLE_AREA = #{enableArea} and c.PROVINCE_CODE = "32" 
	ORDER BY c.PRIORITY DESC, c.PRICE * a.DISCOUNT ASC LIMIT 1
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select a.ID as ID, a.SERVICE_CODE as SERVICE_CODE, a.PRODUCT_CODE as PRODUCT_CODE, a.DISCOUNT as DISCOUNT, a.STATE as STATE,
		c.PRODCUT_NAME as PRODUCT_NAME, d.OPERATOR_NAME as OPERATOR_NAME, e.NAME as PROVIDER_NAME, c.PRO_PRODUCT_CODE as PRO_PRODUCT_CODE,
		f.PROVINCE_NAME as PROVINCE_NAME, c.ENABLE_AREA as ENABLE_AREA, c.PRIORITY as PRIORITY, c.SIZE as SIZE, c.PRICE asPRICE
	from t_flow_serv_prod a
	INNER JOIN t_flow_service b ON a.SERVICE_CODE = b.SERVICE_CODE
	INNER JOIN t_flow_product c ON c.PRODUCT_CODE = a.PRODUCT_CODE
	INNER JOIN t_base_operator d ON c.OPERATOR_CODE = d.OPERATOR_NAME
	INNER JOIN t_flow_provider e ON c.PROVIDER_CODE = e.PROVIDER_CODE
	INNER JOIN t_base_province f ON c.PROVINCE_CODE = f.PROVINCE_NAME
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_flow_serv_prod
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.flow.system.model.ProductForDistributor">
    insert into t_flow_serv_prod (ID, SERVICE_CODE, PRODUCT_CODE, 
      DISCOUNT, STATE)
    values (#{id,jdbcType=INTEGER}, #{serviceCode,jdbcType=VARCHAR}, #{productCode,jdbcType=VARCHAR}, 
      #{discount,jdbcType=DOUBLE}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.flow.system.model.ProductForDistributor">
    insert into t_flow_serv_prod
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="serviceCode != null">
        SERVICE_CODE,
      </if>
      <if test="productCode != null">
        PRODUCT_CODE,
      </if>
      <if test="discount != null">
        DISCOUNT,
      </if>
      <if test="state != null">
        STATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="serviceCode != null">
        #{serviceCode,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null">
        #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.flow.system.model.ProductForDistributor">
    update t_flow_serv_prod
    <set>
      <if test="serviceCode != null">
        SERVICE_CODE = #{serviceCode,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null">
        PRODUCT_CODE = #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="discount != null">
        DISCOUNT = #{discount,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        STATE = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.flow.system.model.ProductForDistributor">
    update t_flow_serv_prod
    set SERVICE_CODE = #{serviceCode,jdbcType=VARCHAR},
      PRODUCT_CODE = #{productCode,jdbcType=VARCHAR},
      DISCOUNT = #{discount,jdbcType=DOUBLE},
      STATE = #{state,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>